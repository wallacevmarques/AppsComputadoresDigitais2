# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#######################################################################
# gaul/examples/Makefile.am
#######################################################################
#
# GAUL - Genetic Algorithm Utility library.
# Copyright Â©2000-2003, Stewart Adcock <stewart@linux-domain.com>
# All rights reserved.
#
# The latest version of this program should be available at:
# http://gaul.sourceforge.net/
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.  Alternatively, if your project
# is incompatible with the GPL, I will probably agree to requests
# for permission to use the terms of any other license.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY WHATSOEVER.
#
# A full copy of the GNU General Public License should be in the file
# "COPYING" provided with this distribution; if not, see:
# http://www.gnu.org/
#
#######################################################################
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
CC = @CC@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
GA_BUILD_DATE_STRING = @GA_BUILD_DATE_STRING@
GA_MAJOR_VERSION = @GA_MAJOR_VERSION@
GA_MINOR_VERSION = @GA_MINOR_VERSION@
GA_NUM_PROCESSES_ENVVAR_STRING = @GA_NUM_PROCESSES_ENVVAR_STRING@
GA_PATCH_VERSION = @GA_PATCH_VERSION@
GA_UNAME_STRING = @GA_UNAME_STRING@
GA_VERSION = @GA_VERSION@
GA_VERSION_STRING = @GA_VERSION_STRING@
HAVE_SLANG = @HAVE_SLANG@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LT_CURRENT = @LT_CURRENT@
LT_RELEASE = @LT_RELEASE@
LT_REVISION = @LT_REVISION@
MEMORY_ALLOC_DEBUG = @MEMORY_ALLOC_DEBUG@
MEMORY_ALLOC_SAFE = @MEMORY_ALLOC_SAFE@
MEMORY_CHUNKS_MIMIC = @MEMORY_CHUNKS_MIMIC@
MPIFLAGS = @MPIFLAGS@
MPILIBS = @MPILIBS@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
V3_QUICK = @V3_QUICK@
VERSION = @VERSION@
W32_CRIPPLED = @W32_CRIPPLED@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

# require automake 1.4
AUTOMAKE_OPTIONS = 1.4

# Kludge:
INCLUDES = -I../util/ -I../src/ -I/usr/include/slang/

bin_PROGRAMS = \
	test_ga test_simplex test_sd \
	fitting fitting_simplex fitting_sd \
	pingpong pingpong_tabu pingpong_tabu2 pingpong_sa \
	wildfire wildfire_forked wildfire_loadbalancing \
	goldberg1 goldberg2 \
	royalroad royalroad_ss royalroad_bitstring \
	onemax \
	struggle struggle_forked \
	struggle_dc struggle_randomsearch \
	struggle_systematicsearch struggle_ss \
        struggle2 struggle3 struggle4 \
	struggle5 struggle5_mp struggle5_forked \
	saveload \
	nnevolve \
	mixed


test_ga_SOURCES = test_ga.c
test_simplex_SOURCES = test_simplex.c
test_sd_SOURCES = test_sd.c
fitting_SOURCES = fitting.c
fitting_simplex_SOURCES = fitting_simplex.c
fitting_sd_SOURCES = fitting_sd.c
pingpong_SOURCES = pingpong.c
pingpong_tabu_SOURCES = pingpong_tabu.c
pingpong_tabu2_SOURCES = pingpong_tabu2.c
pingpong_sa_SOURCES = pingpong_sa.c
wildfire_SOURCES = wildfire.c
wildfire_forked_SOURCES = wildfire_forked.c
wildfire_loadbalancing_SOURCES = wildfire_loadbalancing.c
goldberg1_SOURCES = goldberg1.c
goldberg2_SOURCES = goldberg2.c
royalroad_SOURCES = royalroad.c
royalroad_bitstring_SOURCES = royalroad_bitstring.c
royalroad_ss_SOURCES = royalroad_ss.c
onemax_SOURCES = onemax.c
struggle_SOURCES = struggle.c
struggle_dc_SOURCES = struggle_dc.c
struggle_randomsearch_SOURCES = struggle_randomsearch.c
struggle_systematicsearch_SOURCES = struggle_systematicsearch.c
struggle_forked_SOURCES = struggle_forked.c
struggle2_SOURCES = struggle2.c
struggle3_SOURCES = struggle3.c
struggle4_SOURCES = struggle4.c
struggle5_SOURCES = struggle5.c
struggle5_forked_SOURCES = struggle5_forked.c
struggle5_mp_SOURCES = struggle5_mp.c
struggle_ss_SOURCES = struggle_ss.c
saveload_SOURCES = saveload.c
nnevolve_SOURCES = nnevolve.c
mixed_SOURCES = mixed.c

noinst_HEADERS = \
	goldberg1.h goldberg2.h pingpong.h wildfire.h


EXTRA_DIST = \
	chromostubs.c \
	chromostubs.h \
	wine.data wine.names


test_ga_DEPENDENCIES = ${DEPENDENCIES}
test_simplex_DEPENDENCIES = ${DEPENDENCIES}
test_sd_DEPENDENCIES = ${DEPENDENCIES}
fitting_DEPENDENCIES = ${DEPENDENCIES}
fitting_simplex_DEPENDENCIES = ${DEPENDENCIES}
fitting_sd_DEPENDENCIES = ${DEPENDENCIES}
pingpong_DEPENDENCIES = ${DEPENDENCIES}
pingpong_tabu_DEPENDENCIES = ${DEPENDENCIES}
pingpong_tabu2_DEPENDENCIES = ${DEPENDENCIES}
pingpong_sa_DEPENDENCIES = ${DEPENDENCIES}
wildfire_DEPENDENCIES = ${DEPENDENCIES}
wildfire_forked_DEPENDENCIES = ${DEPENDENCIES}
wildfire_loadbalancing_DEPENDENCIES = ${DEPENDENCIES}
goldberg1_DEPENDENCIES = ${DEPENDENCIES}
goldberg2_DEPENDENCIES = ${DEPENDENCIES}
royalroad_DEPENDENCIES = ${DEPENDENCIES}
royalroad_bitstring_DEPENDENCIES = ${DEPENDENCIES}
royalroad_ss_DEPENDENCIES = ${DEPENDENCIES}
onemax_DEPENDENCIES = ${DEPENDENCIES}
struggle_DEPENDENCIES = ${DEPENDENCIES}
struggle_dc_DEPENDENCIES = ${DEPENDENCIES}
struggle_randomsearch_DEPENDENCIES = ${DEPENDENCIES}
struggle_systematicsearch_DEPENDENCIES = ${DEPENDENCIES}
struggle_forked_DEPENDENCIES = ${DEPENDENCIES}
struggle2_DEPENDENCIES = ${DEPENDENCIES}
struggle3_DEPENDENCIES = ${DEPENDENCIES}
struggle4_DEPENDENCIES = ${DEPENDENCIES}
struggle5_DEPENDENCIES = ${DEPENDENCIES}
struggle5_forked_DEPENDENCIES = ${DEPENDENCIES}
struggle5_mp_DEPENDENCIES = ${DEPENDENCIES}
struggle_ss_DEPENDENCIES = ${DEPENDENCIES}
saveload_DEPENDENCIES = ${DEPENDENCIES}
nnevolve_DEPENDENCIES = ${DEPENDENCIES}
mixed_DEPENDENCIES = ${DEPENDENCIES}

# Serial code:
test_ga_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
test_sd_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
test_simplex_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
fitting_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
fitting_simplex_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
fitting_sd_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
pingpong_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
pingpong_tabu_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
pingpong_tabu2_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
pingpong_sa_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
wildfire_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
wildfire_forked_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
wildfire_loadbalancing_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
goldberg1_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
goldberg2_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
royalroad_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
royalroad_bitstring_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
royalroad_ss_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
onemax_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
struggle_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
struggle_dc_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
struggle_randomsearch_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
struggle_systematicsearch_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
struggle_forked_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
struggle2_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
struggle3_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
struggle4_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
struggle5_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
struggle5_forked_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
struggle_ss_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
saveload_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
nnevolve_LDADD = -L../src/ -L../util/ -lgaul -lnn_util -lgaul_util -lm
mixed_LDADD = -L../src/ -L../util/ -lgaul -lnn_util -lgaul_util -lm
struggle5_mp_LDADD = -L../src/ -L../util/ -lgaul -lgaul_util -lm
subdir = examples
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/util/gaul/gaul_config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = test_ga$(EXEEXT) test_simplex$(EXEEXT) test_sd$(EXEEXT) \
	fitting$(EXEEXT) fitting_simplex$(EXEEXT) fitting_sd$(EXEEXT) \
	pingpong$(EXEEXT) pingpong_tabu$(EXEEXT) \
	pingpong_tabu2$(EXEEXT) pingpong_sa$(EXEEXT) wildfire$(EXEEXT) \
	wildfire_forked$(EXEEXT) wildfire_loadbalancing$(EXEEXT) \
	goldberg1$(EXEEXT) goldberg2$(EXEEXT) royalroad$(EXEEXT) \
	royalroad_ss$(EXEEXT) royalroad_bitstring$(EXEEXT) \
	onemax$(EXEEXT) struggle$(EXEEXT) struggle_forked$(EXEEXT) \
	struggle_dc$(EXEEXT) struggle_randomsearch$(EXEEXT) \
	struggle_systematicsearch$(EXEEXT) struggle_ss$(EXEEXT) \
	struggle2$(EXEEXT) struggle3$(EXEEXT) struggle4$(EXEEXT) \
	struggle5$(EXEEXT) struggle5_mp$(EXEEXT) \
	struggle5_forked$(EXEEXT) saveload$(EXEEXT) nnevolve$(EXEEXT) \
	mixed$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_fitting_OBJECTS = fitting.$(OBJEXT)
fitting_OBJECTS = $(am_fitting_OBJECTS)
fitting_LDFLAGS =
am_fitting_sd_OBJECTS = fitting_sd.$(OBJEXT)
fitting_sd_OBJECTS = $(am_fitting_sd_OBJECTS)
fitting_sd_LDFLAGS =
am_fitting_simplex_OBJECTS = fitting_simplex.$(OBJEXT)
fitting_simplex_OBJECTS = $(am_fitting_simplex_OBJECTS)
fitting_simplex_LDFLAGS =
am_goldberg1_OBJECTS = goldberg1.$(OBJEXT)
goldberg1_OBJECTS = $(am_goldberg1_OBJECTS)
goldberg1_LDFLAGS =
am_goldberg2_OBJECTS = goldberg2.$(OBJEXT)
goldberg2_OBJECTS = $(am_goldberg2_OBJECTS)
goldberg2_LDFLAGS =
am_mixed_OBJECTS = mixed.$(OBJEXT)
mixed_OBJECTS = $(am_mixed_OBJECTS)
mixed_LDFLAGS =
am_nnevolve_OBJECTS = nnevolve.$(OBJEXT)
nnevolve_OBJECTS = $(am_nnevolve_OBJECTS)
nnevolve_LDFLAGS =
am_onemax_OBJECTS = onemax.$(OBJEXT)
onemax_OBJECTS = $(am_onemax_OBJECTS)
onemax_LDFLAGS =
am_pingpong_OBJECTS = pingpong.$(OBJEXT)
pingpong_OBJECTS = $(am_pingpong_OBJECTS)
pingpong_LDFLAGS =
am_pingpong_sa_OBJECTS = pingpong_sa.$(OBJEXT)
pingpong_sa_OBJECTS = $(am_pingpong_sa_OBJECTS)
pingpong_sa_LDFLAGS =
am_pingpong_tabu_OBJECTS = pingpong_tabu.$(OBJEXT)
pingpong_tabu_OBJECTS = $(am_pingpong_tabu_OBJECTS)
pingpong_tabu_LDFLAGS =
am_pingpong_tabu2_OBJECTS = pingpong_tabu2.$(OBJEXT)
pingpong_tabu2_OBJECTS = $(am_pingpong_tabu2_OBJECTS)
pingpong_tabu2_LDFLAGS =
am_royalroad_OBJECTS = royalroad.$(OBJEXT)
royalroad_OBJECTS = $(am_royalroad_OBJECTS)
royalroad_LDFLAGS =
am_royalroad_bitstring_OBJECTS = royalroad_bitstring.$(OBJEXT)
royalroad_bitstring_OBJECTS = $(am_royalroad_bitstring_OBJECTS)
royalroad_bitstring_LDFLAGS =
am_royalroad_ss_OBJECTS = royalroad_ss.$(OBJEXT)
royalroad_ss_OBJECTS = $(am_royalroad_ss_OBJECTS)
royalroad_ss_LDFLAGS =
am_saveload_OBJECTS = saveload.$(OBJEXT)
saveload_OBJECTS = $(am_saveload_OBJECTS)
saveload_LDFLAGS =
am_struggle_OBJECTS = struggle.$(OBJEXT)
struggle_OBJECTS = $(am_struggle_OBJECTS)
struggle_LDFLAGS =
am_struggle2_OBJECTS = struggle2.$(OBJEXT)
struggle2_OBJECTS = $(am_struggle2_OBJECTS)
struggle2_LDFLAGS =
am_struggle3_OBJECTS = struggle3.$(OBJEXT)
struggle3_OBJECTS = $(am_struggle3_OBJECTS)
struggle3_LDFLAGS =
am_struggle4_OBJECTS = struggle4.$(OBJEXT)
struggle4_OBJECTS = $(am_struggle4_OBJECTS)
struggle4_LDFLAGS =
am_struggle5_OBJECTS = struggle5.$(OBJEXT)
struggle5_OBJECTS = $(am_struggle5_OBJECTS)
struggle5_LDFLAGS =
am_struggle5_forked_OBJECTS = struggle5_forked.$(OBJEXT)
struggle5_forked_OBJECTS = $(am_struggle5_forked_OBJECTS)
struggle5_forked_LDFLAGS =
am_struggle5_mp_OBJECTS = struggle5_mp.$(OBJEXT)
struggle5_mp_OBJECTS = $(am_struggle5_mp_OBJECTS)
struggle5_mp_LDFLAGS =
am_struggle_dc_OBJECTS = struggle_dc.$(OBJEXT)
struggle_dc_OBJECTS = $(am_struggle_dc_OBJECTS)
struggle_dc_LDFLAGS =
am_struggle_forked_OBJECTS = struggle_forked.$(OBJEXT)
struggle_forked_OBJECTS = $(am_struggle_forked_OBJECTS)
struggle_forked_LDFLAGS =
am_struggle_randomsearch_OBJECTS = struggle_randomsearch.$(OBJEXT)
struggle_randomsearch_OBJECTS = $(am_struggle_randomsearch_OBJECTS)
struggle_randomsearch_LDFLAGS =
am_struggle_ss_OBJECTS = struggle_ss.$(OBJEXT)
struggle_ss_OBJECTS = $(am_struggle_ss_OBJECTS)
struggle_ss_LDFLAGS =
am_struggle_systematicsearch_OBJECTS = \
	struggle_systematicsearch.$(OBJEXT)
struggle_systematicsearch_OBJECTS = \
	$(am_struggle_systematicsearch_OBJECTS)
struggle_systematicsearch_LDFLAGS =
am_test_ga_OBJECTS = test_ga.$(OBJEXT)
test_ga_OBJECTS = $(am_test_ga_OBJECTS)
test_ga_LDFLAGS =
am_test_sd_OBJECTS = test_sd.$(OBJEXT)
test_sd_OBJECTS = $(am_test_sd_OBJECTS)
test_sd_LDFLAGS =
am_test_simplex_OBJECTS = test_simplex.$(OBJEXT)
test_simplex_OBJECTS = $(am_test_simplex_OBJECTS)
test_simplex_LDFLAGS =
am_wildfire_OBJECTS = wildfire.$(OBJEXT)
wildfire_OBJECTS = $(am_wildfire_OBJECTS)
wildfire_LDFLAGS =
am_wildfire_forked_OBJECTS = wildfire_forked.$(OBJEXT)
wildfire_forked_OBJECTS = $(am_wildfire_forked_OBJECTS)
wildfire_forked_LDFLAGS =
am_wildfire_loadbalancing_OBJECTS = wildfire_loadbalancing.$(OBJEXT)
wildfire_loadbalancing_OBJECTS = $(am_wildfire_loadbalancing_OBJECTS)
wildfire_loadbalancing_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir) -I$(top_builddir)/util/gaul
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/fitting.Po ./$(DEPDIR)/fitting_sd.Po \
@AMDEP_TRUE@	./$(DEPDIR)/fitting_simplex.Po \
@AMDEP_TRUE@	./$(DEPDIR)/goldberg1.Po ./$(DEPDIR)/goldberg2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mixed.Po ./$(DEPDIR)/nnevolve.Po \
@AMDEP_TRUE@	./$(DEPDIR)/onemax.Po ./$(DEPDIR)/pingpong.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pingpong_sa.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pingpong_tabu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pingpong_tabu2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/royalroad.Po \
@AMDEP_TRUE@	./$(DEPDIR)/royalroad_bitstring.Po \
@AMDEP_TRUE@	./$(DEPDIR)/royalroad_ss.Po ./$(DEPDIR)/saveload.Po \
@AMDEP_TRUE@	./$(DEPDIR)/struggle.Po ./$(DEPDIR)/struggle2.Po \
@AMDEP_TRUE@	./$(DEPDIR)/struggle3.Po ./$(DEPDIR)/struggle4.Po \
@AMDEP_TRUE@	./$(DEPDIR)/struggle5.Po \
@AMDEP_TRUE@	./$(DEPDIR)/struggle5_forked.Po \
@AMDEP_TRUE@	./$(DEPDIR)/struggle5_mp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/struggle_dc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/struggle_forked.Po \
@AMDEP_TRUE@	./$(DEPDIR)/struggle_randomsearch.Po \
@AMDEP_TRUE@	./$(DEPDIR)/struggle_ss.Po \
@AMDEP_TRUE@	./$(DEPDIR)/struggle_systematicsearch.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test_ga.Po ./$(DEPDIR)/test_sd.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test_simplex.Po ./$(DEPDIR)/wildfire.Po \
@AMDEP_TRUE@	./$(DEPDIR)/wildfire_forked.Po \
@AMDEP_TRUE@	./$(DEPDIR)/wildfire_loadbalancing.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(fitting_SOURCES) $(fitting_sd_SOURCES) \
	$(fitting_simplex_SOURCES) $(goldberg1_SOURCES) \
	$(goldberg2_SOURCES) $(mixed_SOURCES) $(nnevolve_SOURCES) \
	$(onemax_SOURCES) $(pingpong_SOURCES) $(pingpong_sa_SOURCES) \
	$(pingpong_tabu_SOURCES) $(pingpong_tabu2_SOURCES) \
	$(royalroad_SOURCES) $(royalroad_bitstring_SOURCES) \
	$(royalroad_ss_SOURCES) $(saveload_SOURCES) $(struggle_SOURCES) \
	$(struggle2_SOURCES) $(struggle3_SOURCES) $(struggle4_SOURCES) \
	$(struggle5_SOURCES) $(struggle5_forked_SOURCES) \
	$(struggle5_mp_SOURCES) $(struggle_dc_SOURCES) \
	$(struggle_forked_SOURCES) $(struggle_randomsearch_SOURCES) \
	$(struggle_ss_SOURCES) $(struggle_systematicsearch_SOURCES) \
	$(test_ga_SOURCES) $(test_sd_SOURCES) $(test_simplex_SOURCES) \
	$(wildfire_SOURCES) $(wildfire_forked_SOURCES) \
	$(wildfire_loadbalancing_SOURCES)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = README $(noinst_HEADERS) Makefile.am Makefile.in TODO
SOURCES = $(fitting_SOURCES) $(fitting_sd_SOURCES) $(fitting_simplex_SOURCES) $(goldberg1_SOURCES) $(goldberg2_SOURCES) $(mixed_SOURCES) $(nnevolve_SOURCES) $(onemax_SOURCES) $(pingpong_SOURCES) $(pingpong_sa_SOURCES) $(pingpong_tabu_SOURCES) $(pingpong_tabu2_SOURCES) $(royalroad_SOURCES) $(royalroad_bitstring_SOURCES) $(royalroad_ss_SOURCES) $(saveload_SOURCES) $(struggle_SOURCES) $(struggle2_SOURCES) $(struggle3_SOURCES) $(struggle4_SOURCES) $(struggle5_SOURCES) $(struggle5_forked_SOURCES) $(struggle5_mp_SOURCES) $(struggle_dc_SOURCES) $(struggle_forked_SOURCES) $(struggle_randomsearch_SOURCES) $(struggle_ss_SOURCES) $(struggle_systematicsearch_SOURCES) $(test_ga_SOURCES) $(test_sd_SOURCES) $(test_simplex_SOURCES) $(wildfire_SOURCES) $(wildfire_forked_SOURCES) $(wildfire_loadbalancing_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  examples/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
fitting$(EXEEXT): $(fitting_OBJECTS) $(fitting_DEPENDENCIES) 
	@rm -f fitting$(EXEEXT)
	$(LINK) $(fitting_LDFLAGS) $(fitting_OBJECTS) $(fitting_LDADD) $(LIBS)
fitting_sd$(EXEEXT): $(fitting_sd_OBJECTS) $(fitting_sd_DEPENDENCIES) 
	@rm -f fitting_sd$(EXEEXT)
	$(LINK) $(fitting_sd_LDFLAGS) $(fitting_sd_OBJECTS) $(fitting_sd_LDADD) $(LIBS)
fitting_simplex$(EXEEXT): $(fitting_simplex_OBJECTS) $(fitting_simplex_DEPENDENCIES) 
	@rm -f fitting_simplex$(EXEEXT)
	$(LINK) $(fitting_simplex_LDFLAGS) $(fitting_simplex_OBJECTS) $(fitting_simplex_LDADD) $(LIBS)
goldberg1$(EXEEXT): $(goldberg1_OBJECTS) $(goldberg1_DEPENDENCIES) 
	@rm -f goldberg1$(EXEEXT)
	$(LINK) $(goldberg1_LDFLAGS) $(goldberg1_OBJECTS) $(goldberg1_LDADD) $(LIBS)
goldberg2$(EXEEXT): $(goldberg2_OBJECTS) $(goldberg2_DEPENDENCIES) 
	@rm -f goldberg2$(EXEEXT)
	$(LINK) $(goldberg2_LDFLAGS) $(goldberg2_OBJECTS) $(goldberg2_LDADD) $(LIBS)
mixed$(EXEEXT): $(mixed_OBJECTS) $(mixed_DEPENDENCIES) 
	@rm -f mixed$(EXEEXT)
	$(LINK) $(mixed_LDFLAGS) $(mixed_OBJECTS) $(mixed_LDADD) $(LIBS)
nnevolve$(EXEEXT): $(nnevolve_OBJECTS) $(nnevolve_DEPENDENCIES) 
	@rm -f nnevolve$(EXEEXT)
	$(LINK) $(nnevolve_LDFLAGS) $(nnevolve_OBJECTS) $(nnevolve_LDADD) $(LIBS)
onemax$(EXEEXT): $(onemax_OBJECTS) $(onemax_DEPENDENCIES) 
	@rm -f onemax$(EXEEXT)
	$(LINK) $(onemax_LDFLAGS) $(onemax_OBJECTS) $(onemax_LDADD) $(LIBS)
pingpong$(EXEEXT): $(pingpong_OBJECTS) $(pingpong_DEPENDENCIES) 
	@rm -f pingpong$(EXEEXT)
	$(LINK) $(pingpong_LDFLAGS) $(pingpong_OBJECTS) $(pingpong_LDADD) $(LIBS)
pingpong_sa$(EXEEXT): $(pingpong_sa_OBJECTS) $(pingpong_sa_DEPENDENCIES) 
	@rm -f pingpong_sa$(EXEEXT)
	$(LINK) $(pingpong_sa_LDFLAGS) $(pingpong_sa_OBJECTS) $(pingpong_sa_LDADD) $(LIBS)
pingpong_tabu$(EXEEXT): $(pingpong_tabu_OBJECTS) $(pingpong_tabu_DEPENDENCIES) 
	@rm -f pingpong_tabu$(EXEEXT)
	$(LINK) $(pingpong_tabu_LDFLAGS) $(pingpong_tabu_OBJECTS) $(pingpong_tabu_LDADD) $(LIBS)
pingpong_tabu2$(EXEEXT): $(pingpong_tabu2_OBJECTS) $(pingpong_tabu2_DEPENDENCIES) 
	@rm -f pingpong_tabu2$(EXEEXT)
	$(LINK) $(pingpong_tabu2_LDFLAGS) $(pingpong_tabu2_OBJECTS) $(pingpong_tabu2_LDADD) $(LIBS)
royalroad$(EXEEXT): $(royalroad_OBJECTS) $(royalroad_DEPENDENCIES) 
	@rm -f royalroad$(EXEEXT)
	$(LINK) $(royalroad_LDFLAGS) $(royalroad_OBJECTS) $(royalroad_LDADD) $(LIBS)
royalroad_bitstring$(EXEEXT): $(royalroad_bitstring_OBJECTS) $(royalroad_bitstring_DEPENDENCIES) 
	@rm -f royalroad_bitstring$(EXEEXT)
	$(LINK) $(royalroad_bitstring_LDFLAGS) $(royalroad_bitstring_OBJECTS) $(royalroad_bitstring_LDADD) $(LIBS)
royalroad_ss$(EXEEXT): $(royalroad_ss_OBJECTS) $(royalroad_ss_DEPENDENCIES) 
	@rm -f royalroad_ss$(EXEEXT)
	$(LINK) $(royalroad_ss_LDFLAGS) $(royalroad_ss_OBJECTS) $(royalroad_ss_LDADD) $(LIBS)
saveload$(EXEEXT): $(saveload_OBJECTS) $(saveload_DEPENDENCIES) 
	@rm -f saveload$(EXEEXT)
	$(LINK) $(saveload_LDFLAGS) $(saveload_OBJECTS) $(saveload_LDADD) $(LIBS)
struggle$(EXEEXT): $(struggle_OBJECTS) $(struggle_DEPENDENCIES) 
	@rm -f struggle$(EXEEXT)
	$(LINK) $(struggle_LDFLAGS) $(struggle_OBJECTS) $(struggle_LDADD) $(LIBS)
struggle2$(EXEEXT): $(struggle2_OBJECTS) $(struggle2_DEPENDENCIES) 
	@rm -f struggle2$(EXEEXT)
	$(LINK) $(struggle2_LDFLAGS) $(struggle2_OBJECTS) $(struggle2_LDADD) $(LIBS)
struggle3$(EXEEXT): $(struggle3_OBJECTS) $(struggle3_DEPENDENCIES) 
	@rm -f struggle3$(EXEEXT)
	$(LINK) $(struggle3_LDFLAGS) $(struggle3_OBJECTS) $(struggle3_LDADD) $(LIBS)
struggle4$(EXEEXT): $(struggle4_OBJECTS) $(struggle4_DEPENDENCIES) 
	@rm -f struggle4$(EXEEXT)
	$(LINK) $(struggle4_LDFLAGS) $(struggle4_OBJECTS) $(struggle4_LDADD) $(LIBS)
struggle5$(EXEEXT): $(struggle5_OBJECTS) $(struggle5_DEPENDENCIES) 
	@rm -f struggle5$(EXEEXT)
	$(LINK) $(struggle5_LDFLAGS) $(struggle5_OBJECTS) $(struggle5_LDADD) $(LIBS)
struggle5_forked$(EXEEXT): $(struggle5_forked_OBJECTS) $(struggle5_forked_DEPENDENCIES) 
	@rm -f struggle5_forked$(EXEEXT)
	$(LINK) $(struggle5_forked_LDFLAGS) $(struggle5_forked_OBJECTS) $(struggle5_forked_LDADD) $(LIBS)
struggle5_mp$(EXEEXT): $(struggle5_mp_OBJECTS) $(struggle5_mp_DEPENDENCIES) 
	@rm -f struggle5_mp$(EXEEXT)
	$(LINK) $(struggle5_mp_LDFLAGS) $(struggle5_mp_OBJECTS) $(struggle5_mp_LDADD) $(LIBS)
struggle_dc$(EXEEXT): $(struggle_dc_OBJECTS) $(struggle_dc_DEPENDENCIES) 
	@rm -f struggle_dc$(EXEEXT)
	$(LINK) $(struggle_dc_LDFLAGS) $(struggle_dc_OBJECTS) $(struggle_dc_LDADD) $(LIBS)
struggle_forked$(EXEEXT): $(struggle_forked_OBJECTS) $(struggle_forked_DEPENDENCIES) 
	@rm -f struggle_forked$(EXEEXT)
	$(LINK) $(struggle_forked_LDFLAGS) $(struggle_forked_OBJECTS) $(struggle_forked_LDADD) $(LIBS)
struggle_randomsearch$(EXEEXT): $(struggle_randomsearch_OBJECTS) $(struggle_randomsearch_DEPENDENCIES) 
	@rm -f struggle_randomsearch$(EXEEXT)
	$(LINK) $(struggle_randomsearch_LDFLAGS) $(struggle_randomsearch_OBJECTS) $(struggle_randomsearch_LDADD) $(LIBS)
struggle_ss$(EXEEXT): $(struggle_ss_OBJECTS) $(struggle_ss_DEPENDENCIES) 
	@rm -f struggle_ss$(EXEEXT)
	$(LINK) $(struggle_ss_LDFLAGS) $(struggle_ss_OBJECTS) $(struggle_ss_LDADD) $(LIBS)
struggle_systematicsearch$(EXEEXT): $(struggle_systematicsearch_OBJECTS) $(struggle_systematicsearch_DEPENDENCIES) 
	@rm -f struggle_systematicsearch$(EXEEXT)
	$(LINK) $(struggle_systematicsearch_LDFLAGS) $(struggle_systematicsearch_OBJECTS) $(struggle_systematicsearch_LDADD) $(LIBS)
test_ga$(EXEEXT): $(test_ga_OBJECTS) $(test_ga_DEPENDENCIES) 
	@rm -f test_ga$(EXEEXT)
	$(LINK) $(test_ga_LDFLAGS) $(test_ga_OBJECTS) $(test_ga_LDADD) $(LIBS)
test_sd$(EXEEXT): $(test_sd_OBJECTS) $(test_sd_DEPENDENCIES) 
	@rm -f test_sd$(EXEEXT)
	$(LINK) $(test_sd_LDFLAGS) $(test_sd_OBJECTS) $(test_sd_LDADD) $(LIBS)
test_simplex$(EXEEXT): $(test_simplex_OBJECTS) $(test_simplex_DEPENDENCIES) 
	@rm -f test_simplex$(EXEEXT)
	$(LINK) $(test_simplex_LDFLAGS) $(test_simplex_OBJECTS) $(test_simplex_LDADD) $(LIBS)
wildfire$(EXEEXT): $(wildfire_OBJECTS) $(wildfire_DEPENDENCIES) 
	@rm -f wildfire$(EXEEXT)
	$(LINK) $(wildfire_LDFLAGS) $(wildfire_OBJECTS) $(wildfire_LDADD) $(LIBS)
wildfire_forked$(EXEEXT): $(wildfire_forked_OBJECTS) $(wildfire_forked_DEPENDENCIES) 
	@rm -f wildfire_forked$(EXEEXT)
	$(LINK) $(wildfire_forked_LDFLAGS) $(wildfire_forked_OBJECTS) $(wildfire_forked_LDADD) $(LIBS)
wildfire_loadbalancing$(EXEEXT): $(wildfire_loadbalancing_OBJECTS) $(wildfire_loadbalancing_DEPENDENCIES) 
	@rm -f wildfire_loadbalancing$(EXEEXT)
	$(LINK) $(wildfire_loadbalancing_LDFLAGS) $(wildfire_loadbalancing_OBJECTS) $(wildfire_loadbalancing_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fitting.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fitting_sd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fitting_simplex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/goldberg1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/goldberg2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mixed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nnevolve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/onemax.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pingpong.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pingpong_sa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pingpong_tabu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pingpong_tabu2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/royalroad.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/royalroad_bitstring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/royalroad_ss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/saveload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle5_forked.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle5_mp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle_dc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle_forked.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle_randomsearch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle_ss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/struggle_systematicsearch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ga.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_simplex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wildfire.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wildfire_forked.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wildfire_loadbalancing.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CCDEPMODE = @CCDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
