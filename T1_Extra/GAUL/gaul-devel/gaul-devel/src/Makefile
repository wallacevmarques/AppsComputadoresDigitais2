# Makefile.in generated by automake 1.6.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#######################################################################
# gaul/src/Makefile.am
#######################################################################
#
# GAUL - Genetic Algorithm Utility library.
# Copyright Â©2000-2002, Stewart Adcock <stewart@linux-domain.com>
# All rights reserved.
#
# The latest version of this program should be available at:
# http://gaul.sourceforge.net/
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.  Alternatively, if your project
# is incompatible with the GPL, I will probably agree to requests
# for permission to use the terms of any other license.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY WHATSOEVER.
#
# A full copy of the GNU General Public License should be in the file
# "COPYING" provided with this distribution; if not, see:
# http://www.gnu.org/
#
#######################################################################
SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/gaul-devel
pkglibdir = $(libdir)/gaul-devel
pkgincludedir = $(includedir)/gaul-devel
top_builddir = ..

ACLOCAL = ${SHELL} /u1/adcock/gaul-devel-0.1846/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /u1/adcock/gaul-devel-0.1846/missing --run autoconf
AUTOMAKE = ${SHELL} /u1/adcock/gaul-devel-0.1846/missing --run automake-1.6
AUTOHEADER = ${SHELL} /u1/adcock/gaul-devel-0.1846/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = 
build_triplet = i686-pc-linux-gnu
host_alias = 
host_triplet = i686-pc-linux-gnu
target_alias = 
target_triplet = i686-pc-linux-gnu

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /u1/adcock/gaul-devel-0.1846/missing --run tar
AS = @AS@
AWK = gawk
CC = gcc
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
ECHO = echo
GA_BUILD_DATE_STRING = 
GA_MAJOR_VERSION = 0
GA_MINOR_VERSION = 1846
GA_NUM_PROCESSES_ENVVAR_STRING = GA_NUM_PROCESSES
GA_PATCH_VERSION = 0
GA_UNAME_STRING = 
GA_VERSION = 0.1846-0
GA_VERSION_STRING = 
HAVE_SLANG = 1
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LT_CURRENT = 0
LT_RELEASE = 0.1846
LT_REVISION = 0
MEMORY_ALLOC_DEBUG = 0
MEMORY_ALLOC_SAFE = 1
MEMORY_CHUNKS_MIMIC = 0
MPIFLAGS = 
MPILIBS = 
OBJDUMP = @OBJDUMP@
PACKAGE = gaul-devel
RANLIB = ranlib
STRIP = strip
V3_QUICK = 1
VERSION = 0.1846-0
W32_CRIPPLED = 0
am__include = include
am__quote = 
install_sh = /u1/adcock/gaul-devel-0.1846/install-sh

# require automake 1.4
AUTOMAKE_OPTIONS = 1.4

# Kludge:
INCLUDES = -I../util/ -I/usr/include/slang/

lib_LTLIBRARIES = libgaul.la

libgaul_la_DEPENDENCIES = gaul.h

libgaul_la_SOURCES = \
    ga_bitstring.c \
    ga_chromo.c \
    ga_climbing.c \
    ga_compare.c \
    ga_core.c \
    ga_crossover.c \
    ga_deterministiccrowding.c \
    ga_intrinsics.c \
    ga_io.c \
    ga_gradient.c \
    ga_mutate.c \
    ga_optim.c \
    ga_qsort.c \
    ga_replace.c \
    ga_randomsearch.c \
    ga_seed.c \
    ga_select.c \
    ga_sa.c \
    ga_similarity.c \
    ga_simplex.c \
    ga_stats.c \
    ga_systematicsearch.c \
    ga_tabu.c \
    ga_utility.c


nobase_include_HEADERS = \
    gaul/ga_bitstring.h \
    gaul/ga_chromo.h \
    gaul/ga_climbing.h \
    gaul/ga_core.h \
    gaul/ga_deterministiccrowding.h \
    gaul/ga_intrinsics.h \
    gaul/ga_gradient.h \
    gaul/ga_optim.h \
    gaul/ga_qsort.h \
    gaul/ga_randomsearch.h \
    gaul/ga_sa.h \
    gaul/ga_similarity.h \
    gaul/ga_simplex.h \
    gaul/ga_systematicsearch.h \
    gaul/ga_tabu.h \
    gaul/ga_utility.h \
    gaul.h


libgaul_la_LIBFLAGS = -lm
libgaul_la_LDFLAGS = -version-info ${GA_MAJOR_VERSION}:${GA_MINOR_VERSION}:0
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/util/gaul/gaul_config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libgaul_la_LIBADD =
am_libgaul_la_OBJECTS = ga_bitstring.lo ga_chromo.lo ga_climbing.lo \
	ga_compare.lo ga_core.lo ga_crossover.lo \
	ga_deterministiccrowding.lo ga_intrinsics.lo ga_io.lo \
	ga_gradient.lo ga_mutate.lo ga_optim.lo ga_qsort.lo \
	ga_replace.lo ga_randomsearch.lo ga_seed.lo ga_select.lo \
	ga_sa.lo ga_similarity.lo ga_simplex.lo ga_stats.lo \
	ga_systematicsearch.lo ga_tabu.lo ga_utility.lo
libgaul_la_OBJECTS = $(am_libgaul_la_OBJECTS)

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir) -I$(top_builddir)/util/gaul
CPPFLAGS = 
LDFLAGS = 
LIBS = -L/u2/lib -lslang -lm -lslang
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/ga_bitstring.Plo \
	./$(DEPDIR)/ga_chromo.Plo \
	./$(DEPDIR)/ga_climbing.Plo \
	./$(DEPDIR)/ga_compare.Plo ./$(DEPDIR)/ga_core.Plo \
	./$(DEPDIR)/ga_crossover.Plo \
	./$(DEPDIR)/ga_deterministiccrowding.Plo \
	./$(DEPDIR)/ga_gradient.Plo \
	./$(DEPDIR)/ga_intrinsics.Plo ./$(DEPDIR)/ga_io.Plo \
	./$(DEPDIR)/ga_mutate.Plo ./$(DEPDIR)/ga_optim.Plo \
	./$(DEPDIR)/ga_qsort.Plo \
	./$(DEPDIR)/ga_randomsearch.Plo \
	./$(DEPDIR)/ga_replace.Plo ./$(DEPDIR)/ga_sa.Plo \
	./$(DEPDIR)/ga_seed.Plo ./$(DEPDIR)/ga_select.Plo \
	./$(DEPDIR)/ga_similarity.Plo \
	./$(DEPDIR)/ga_simplex.Plo ./$(DEPDIR)/ga_stats.Plo \
	./$(DEPDIR)/ga_systematicsearch.Plo \
	./$(DEPDIR)/ga_tabu.Plo ./$(DEPDIR)/ga_utility.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -g -O2 -Wall -mcpu=pentiumpro  -I/usr/include/slang/
DIST_SOURCES = $(libgaul_la_SOURCES)
HEADERS = $(nobase_include_HEADERS)

DIST_COMMON = README $(nobase_include_HEADERS) Makefile.am Makefile.in
SOURCES = $(libgaul_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgaul.la: $(libgaul_la_OBJECTS) $(libgaul_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libgaul_la_LDFLAGS) $(libgaul_la_OBJECTS) $(libgaul_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ga_bitstring.Plo
include ./$(DEPDIR)/ga_chromo.Plo
include ./$(DEPDIR)/ga_climbing.Plo
include ./$(DEPDIR)/ga_compare.Plo
include ./$(DEPDIR)/ga_core.Plo
include ./$(DEPDIR)/ga_crossover.Plo
include ./$(DEPDIR)/ga_deterministiccrowding.Plo
include ./$(DEPDIR)/ga_gradient.Plo
include ./$(DEPDIR)/ga_intrinsics.Plo
include ./$(DEPDIR)/ga_io.Plo
include ./$(DEPDIR)/ga_mutate.Plo
include ./$(DEPDIR)/ga_optim.Plo
include ./$(DEPDIR)/ga_qsort.Plo
include ./$(DEPDIR)/ga_randomsearch.Plo
include ./$(DEPDIR)/ga_replace.Plo
include ./$(DEPDIR)/ga_sa.Plo
include ./$(DEPDIR)/ga_seed.Plo
include ./$(DEPDIR)/ga_select.Plo
include ./$(DEPDIR)/ga_similarity.Plo
include ./$(DEPDIR)/ga_simplex.Plo
include ./$(DEPDIR)/ga_stats.Plo
include ./$(DEPDIR)/ga_systematicsearch.Plo
include ./$(DEPDIR)/ga_tabu.Plo
include ./$(DEPDIR)/ga_utility.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CCDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
nobase_includeHEADERS_INSTALL = $(install_sh_DATA)
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(nobase_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="$$p"; \
	  echo " $(nobase_includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f"; \
	  $(nobase_includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; for p in $$list; do \
	  f="$$p"; \
	  echo " rm -f $(DESTDIR)$(includedir)/$$f"; \
	  rm -f $(DESTDIR)$(includedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/gaul
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(includedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-nobase_includeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-nobase_includeHEADERS

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man \
	install-nobase_includeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-nobase_includeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
